{"ast":null,"code":"const bbApi = {\n  keys: [],\n\n  retrieveFeatureStatus() {\n    const status = () => Math.floor(Math.random() * 3);\n\n    const featureStatus = status();\n    return featureStatus;\n  },\n\n  retrieveControlData() {\n    const controlStatus = () => Math.floor(Math.random() * 3);\n\n    const randomNum = () => Math.floor(Math.random() * 99);\n\n    const controlData = {\n      controlStatusData: controlStatus(),\n      controlDevData: randomNum(),\n      controlDevOutToolData: randomNum()\n    };\n    return controlData;\n  },\n\n  generateRandomKey() {\n    let key = Math.floor(Math.random() * 999);\n\n    if (!this.keys.includes(key)) {\n      this.keys.push(key);\n      return key;\n    } else {\n      setTimeout(() => {\n        this.generateRandomKey();\n      }, 100);\n    }\n  }\n\n};\nexport default bbApi;","map":{"version":3,"sources":["/home/albert/workspace/ABB_Frontend_Assignment/abb_frontend_assignment/src/api/index.js"],"names":["bbApi","keys","retrieveFeatureStatus","status","Math","floor","random","featureStatus","retrieveControlData","controlStatus","randomNum","controlData","controlStatusData","controlDevData","controlDevOutToolData","generateRandomKey","key","includes","push","setTimeout"],"mappings":"AAEA,MAAMA,KAAK,GAAG;AAEVC,EAAAA,IAAI,EAAE,EAFI;;AAIVC,EAAAA,qBAAqB,GAAG;AAEpB,UAAMC,MAAM,GAAG,MAAMC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,CAA3B,CAArB;;AAEA,UAAMC,aAAa,GAAGJ,MAAM,EAA5B;AAEA,WAAOI,aAAP;AACH,GAXS;;AAcVC,EAAAA,mBAAmB,GAAG;AAClB,UAAMC,aAAa,GAAG,MAAML,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,CAA3B,CAA5B;;AACA,UAAMI,SAAS,GAAG,MAAMN,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,EAA3B,CAAxB;;AAEA,UAAMK,WAAW,GAAG;AAChBC,MAAAA,iBAAiB,EAAEH,aAAa,EADhB;AAEhBI,MAAAA,cAAc,EAAEH,SAAS,EAFT;AAGhBI,MAAAA,qBAAqB,EAAEJ,SAAS;AAHhB,KAApB;AAMA,WAAOC,WAAP;AACH,GAzBS;;AA2BVI,EAAAA,iBAAiB,GAAE;AACf,QAAIC,GAAG,GAAGZ,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,GAA3B,CAAV;;AAEA,QAAG,CAAC,KAAKL,IAAL,CAAUgB,QAAV,CAAmBD,GAAnB,CAAJ,EAA6B;AACzB,WAAKf,IAAL,CAAUiB,IAAV,CAAeF,GAAf;AACA,aAAOA,GAAP;AACH,KAHD,MAGO;AACHG,MAAAA,UAAU,CAAC,MAAK;AACZ,aAAKJ,iBAAL;AACH,OAFS,EAER,GAFQ,CAAV;AAGH;AACJ;;AAtCS,CAAd;AAyCA,eAAef,KAAf","sourcesContent":["\n\nconst bbApi = {\n\n    keys: [],\n\n    retrieveFeatureStatus() {\n\n        const status = () => Math.floor(Math.random() * 3);\n\n        const featureStatus = status();\n        \n        return featureStatus;\n    },\n\n\n    retrieveControlData() {\n        const controlStatus = () => Math.floor(Math.random() * 3);\n        const randomNum = () => Math.floor(Math.random() * 99);\n\n        const controlData = {\n            controlStatusData: controlStatus(),\n            controlDevData: randomNum(),\n            controlDevOutToolData: randomNum(),\n        }\n\n        return controlData;\n    },\n\n    generateRandomKey(){\n        let key = Math.floor(Math.random() * 999)\n\n        if(!this.keys.includes(key)) {\n            this.keys.push(key);\n            return key;\n        } else {\n            setTimeout(()=> {\n                this.generateRandomKey();\n            },100)\n        }\n    }\n}\n\nexport default bbApi;"]},"metadata":{},"sourceType":"module"}